openapi: 3.0.0
info:
  version: 1.0.0
  title: my-tracker
servers:
  - url: http://localhost:8080/api
paths:
  /account/:
    get:
      summary: Get account details
      operationId: listUser
      tags:
        - account
      responses:
        '200':
          description: Account of your user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Account nof found in db
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new account
      description: ''
      operationId: addPet
      requestBody:
        description: Add new account after registration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Account of your user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: Default error sample response
      tags:
        - account
  /organization/:
    summary: all about org. Add, delete, edit
    get:
      summary: Get all my organiztion
      description: ''
      operationId: getOrgs
      responses:
        '200':
          description: Your organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        default:
          description: Default error sample response
      tags:
        - organization
    post:
      summary: Add organiztion
      description: ''
      operationId: addOrg
      requestBody:
        description: Organization in JSON
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          description: Account of your user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - organization
  /organization/{organizationId}:
    delete:
      summary: Delete organiztion
      operationId: deleteOrg
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: 'integer'
      responses:
        '200':
          description: Success
        '403':
          description: Access denied for this user
        '404':
          description: Organization not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - organization
    put:
      summary: Update organiztion
      operationId: updateOrg
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: 'integer'
      requestBody:
        description: Organization JSON
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          description: Success
        '403':
          description: Access denied for this user
        '404':
          description: Organization not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - organization
  /organization/{organizationId}/projects:
    get:
      summary: Get project by organization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: 'integer'
      responses:
        '200':
          description: projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '403':
          description: Access denied for this user
        '404':
          description: Organization not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - organization
  /project/:
    summary: all about project. Add, delete, edit
    get:
      summary: Get all projects
      description: ''
      operationId: getProjects
      responses:
        '200':
          description: Projects in org
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        default:
          description: Default error sample response
      tags:
        - project
    post:
      summary: Add project
      description: ''
      operationId: addProj
      requestBody:
        description: Project
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Account of your user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '403':
          description: Access denied for organization
        '404':
          description: Organization not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - project
  /project/{projectId}:
    summary: Project edit, delete
    get:
      tags:
        - project
      summary: get project details by id
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project found and return
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: project not found
        '403':
          description: Access denied for project
        default:
          description: Default error sample response
    delete:
      tags:
        - project
      summary: delete project by id
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project found and delete
        '404':
          description: project not found
        '403':
          description: Access denied for project
        default:
          description: Default error sample response
    put:
      tags:
        - project
      summary: update project by id
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
      requestBody:
        description: Project
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'

      responses:
        '200':
          description: Project found and update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: project not found
        '403':
          description: Access denied for project
        default:
          description: Default error sample response
  /project/{projectId}/tasks:
    summary: Project edit, delete
    get:
      tags:
        - project
      summary: get tasks by project id
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project found and tasks return
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: project not found
        '403':
          description: Access denied for project
        default:
          description: Default error sample response
  /task/:
    summary: all about task. Add, delete, edit
    get:
      summary: Get all tasks
      responses:
        '200':
          description: return all Tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        default:
          description: Default error sample response
      tags:
        - task
    post:
      summary: Add task
      requestBody:
        description: Task
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Account of your user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '403':
          description: Access denied
        '404':
          description: Not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - task
  /task/{taskId}:
    summary: all about task. Add, delete, edit
    get:
      summary: Get task details
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: return Task by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '403':
          description: Access denied
        '404':
          description: Not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - task
    delete:
      summary: Delete task
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        '403':
          description: Access denied
        '404':
          description: Not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - task
    put:
      summary: Update task details
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated Task
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: return updated Task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '403':
          description: Access denied
        '404':
          description: Not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - task
  /task/{taskId}/updateStatus:
    summary: Update task status
    put:
      summary: Update task status
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
        - in: query
          name: newStatus
          required: true
          schema:
            type: string
      responses:
        '200':
          description: return updated Task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '403':
          description: Access denied
        '404':
          description: Not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - task
  /task/{taskId}/history:
    get:
      summary: Get task history
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: return history of Task
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '403':
          description: Access denied
        '404':
          description: Not found
        '400':
          description: Common error
        default:
          description: Default error sample response
      tags:
        - task

components:
  schemas:
    Account:
      type: object
      required:
        - login
        - passwordHash
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        passwordHash:
          type: string
    Organization:
      type: object
      required:
        - organizationName
      properties:
        id:
          type: integer
          format: int64
        organizationName:
          type: string
        owner:
          $ref: '#/components/schemas/Account'
    Project:
      type: object
      required:
        - projectName
      properties:
        id:
          type: integer
          format: int64
        projectName:
          type: string
        organization:
          $ref: '#/components/schemas/Organization'
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        project:
          $ref: '#/components/schemas/Project'
        title:
          type: string
        description:
          type: string
    TaskStatus:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    HistoryItem:
      type: object
      properties:
        id:
          type: integer
        task:
          $ref: '#/components/schemas/Task'
        timestamp:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/TaskStatus'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []
